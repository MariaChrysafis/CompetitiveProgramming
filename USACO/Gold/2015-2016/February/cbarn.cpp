/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <vector>
using namespace std;
class Problem1CircularBarn {
public:
  vector<int> v;
  int comp(int i, int j){
    if(v[i] <= j){
      return j - v[i];
    }else{
      return v.size() - (v[i] - j);
    }
  }
  void solve(std::istream &in, std::ostream &out) {
    int n;
    in >> n;
    for(int i = 0; i < n; i++){
      int a;
      in >> a;
      while(a--){
        v.push_back(i);
      }
    }
    int dif = 0;
    for(int j = 0; j < n; j++){
      dif = max(v[j] - j, dif);
    }
    long long sum = 0;
    for(int i = 0; i < n; i++){
      long long x = comp(i,(i + dif) % n);
      sum += x * x;
    }
    out << sum << endl;
  }
};


int main() {
  ios_base::sync_with_stdio(false);
  cin.tie(NULL);
	Problem1CircularBarn solver;
	std::ifstream in("cbarn.in");
	std::ofstream out("cbarn.out");
	solver.solve(in, out);
	return 0;
}
