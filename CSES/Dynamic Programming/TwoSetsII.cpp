/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */
 
#include <iostream>
#include <fstream>
 
#include <iostream>
using namespace std;
class TwoSetsII {
public:
  const int MOD = 1000000007;
  void solve(std::istream &in, std::ostream &out) {
    int n;
    in >> n;
    if(n % 4 == 3 || n % 4 == 0){
      int c2 = n * (n + 1);
      long long dp[n][c2/4 + 1];
      for(int i = 0; i < n; i++){
        for(int j = 0; j <= c2/4; j++){
          dp[i][j] = 0;
        }
      }
      dp[0][0] = 1;
      dp[0][1] = 1;
      for(int i = 1; i < n; i++){
        for(int j = 0; j <= c2/4; j++){
          if(j - (i + 1) < 0) {
            dp[i][j] = dp[i - 1][j];
            continue;
          }
          dp[i][j] = dp[i - 1][j] + dp[i - 1][j - (i + 1)];
          dp[i][j] %= MOD;
        }
      }
      long long ans = dp[n - 1][c2/4];
      if(ans % 2 == 1){
        ans += MOD;
      }
      out << (ans)/2 << endl;
    }else{
      out << 0 << endl;
      return;
    }
  }
};
 
 
int main() {
  TwoSetsII solver;
  std::istream& in(std::cin);
      std::ostream& out(std::cout);
      solver.solve(in, out);
      return 0;
}
