/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

//Created by Maria Chrysafis
#include <iostream>
#include <fstream>

#include <algorithm>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <unordered_map>
#include <unordered_set>
#include <vector>
#include <cmath>
using namespace std;
class CoinCombinationsII {
public:
  void solve(std::istream &in, std::ostream &out) {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    int n, x;
    in >> n >> x;
    int arr[n];
    for (int i = 0; i < n; i++) {
      in >> arr[i];
    }
    sort(arr, arr + n);
    int MOD = pow(10,9) + 7;
    int DP[x + 1];
    for (int i = 0; i <= x; i++) {
      DP[i] = 0;
    }
    DP[0] = 1;
    for (int j = 0; j < n; j++) {
      for (int i = 0; i <= x; i++) {
        if (i + arr[j] > x) {
          continue;
        }
        DP[i + arr[j]] += DP[i];
        DP[i + arr[j]] %= MOD;
      }
    }
    out << DP[x] << endl;
  }
};


int main() {
	CoinCombinationsII solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
