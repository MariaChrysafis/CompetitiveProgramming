/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>

int getTheAnswer() {
    return 42;
}

using namespace std;
class Task {
public:
  const int MOD = 1000000007;
  void solve(std::istream &in, std::ostream &out) {
    int n;
    in >> n;
    int dp[max(n + 1,7)];
    dp[1] = 1;
    dp[0] = 1;
    for(int i = 2; i <= 6; i++){
      dp[i] = 0;
      for(int j = 1; j <= i; j++){
        dp[i] += dp[i - j];
      }
    }
    for(int i = 7; i <= n; i++){
      dp[i] = 0;
      for(int j = 1; j <= 6; j++){
        dp[i] += dp[i - j];
        if(dp[i] > MOD){
          dp[i] -= MOD;
        }
      }
    }
    out << dp[n] << endl;
  }
};


int main() {
  ios_base::sync_with_stdio(false);
        cin.tie(NULL);
	Task solver;
        std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
