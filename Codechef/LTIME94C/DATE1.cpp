/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <algorithm>
#include <fstream>

#include <iostream>
#pragma GCC target("avx2")
#pragma GCC optimization("O3")
#pragma GCC optimization("unroll-loops")
#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
using namespace std;
class DinnerByCandlelight {
public:
  void f(std::istream &in, std::ostream &out) {
    long long A, Y, X;
    in >> A >> Y >> X;
    if(A < Y){
      out << X * A + 1 << '\n';
      return;
    }
    if(A == Y){
      out << X * A << '\n';
      return;
    }
    out << X * Y << '\n';
  }
  void solve(std::istream &in, std::ostream &out) {
    int t;
    in >> t;
    while(t--){
      f(in, out);
    }
  }
};


int main() {
	DinnerByCandlelight solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
