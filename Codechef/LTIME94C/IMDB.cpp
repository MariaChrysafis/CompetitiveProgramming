/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <algorithm>
#include <fstream>

#include <iostream>
#include <vector>
#pragma GCC target("avx2")
#pragma GCC optimization("O3")
#pragma GCC optimization("unroll-loops")
#pragma optimization_level 3
#pragma GCC optimize("Ofast,no-stack-protector,unroll-loops,fast-math,O3")
#pragma GCC target("sse,sse2,sse3,ssse3,sse4,popcnt,abm,mmx,avx,tune=native")
using namespace std;
class Motivation {
public:
  void f(std::istream &in, std::ostream &out) {
    long long N, X;
    in >> N >> X;
    long long myMax = -1;
    for(int i = 0; i < N; i++){
      long long S, R;
      in >> S >> R;
      if(S > X){
        continue;
      }
      myMax = max(R, myMax);
    }
    out << myMax << '\n';
  }
  void solve(std::istream &in, std::ostream &out) {
    int t;
    in >> t;
    while (t--) {
      f(in, out);
    }
  }
};


int main() {
	Motivation solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
