/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Maria Chrysafis (Olympia)
 */



#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <iomanip>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <string>
#include <random>
using namespace std;
class BWalkingInTheRain {
public:
	void solve(std::istream& in, std::ostream& out) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        int n;
        in >> n;
        vector<int> arr(n);
        for (int i = 0; i < arr.size(); i++) {
            in >> arr[i];
        }
        int ans = min(arr[0], arr[n - 1]);
        for (int i = 1; i < arr.size(); i++) {
            ans = min(ans, max(arr[i], arr[i - 1]));
        }
        out << ans;
	}
};


int main() {
	BWalkingInTheRain solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
