/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Maria Chrysafis (Olympia)
 */



#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <iomanip>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <string>
#include <random>
using namespace std;
class AAngryStudents {
public:
    int solver (string s) {
        vector<char> v;
        for (char c: s) {
            v.push_back(c);
        }
        reverse(v.begin(), v.end());
        while (v.size() >= 0 && v.back() == 'P') {
            v.pop_back();
        }
        int cntr = 0;
        int ans = 0;
        for (int i = 0; i < v.size(); i++) {
            if (v[i] == 'P') {
                cntr++;
                ans = max(ans, cntr);
            } else {
                cntr = 0;
            }
        }
        return ans;
    }
	void solve(std::istream& in, std::ostream& out) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        int t;
        in >> t;
        while (t--) {
            int n;
            in >> n;
            string s;
            in >> s;
            out << solver(s) << '\n';
        }
	}
};


int main() {
	AAngryStudents solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
