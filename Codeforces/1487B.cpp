/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */
 
#include <iostream>
#include <fstream>
 
#include <iostream>
#include <algorithm>
using namespace std;
class BCatCycle {
public:
  void f(std::istream &in, std::ostream &out) {
    int n, k;
    in >> n >> k;
    if(n % 2 == 0){
      int x = k % n;
      if(x == 0){
        out << n << endl;
        return;
      }
      out << x << endl;
      return;
    }
    int c = (k - 1) / ((n - 1)/2);
    int steps = c * (n - 1)/2;
    steps %= n;
    //out << (k - 1) % ((n - 1)/2) << endl;
    int ans = (n - (steps - (k - 1) % ((n - 1)/2)) + 1);
    if(ans % n == 0){
      out << n << endl;
      return;
    }
    out << ans % n << endl;
  }
  void solve(std::istream &in, std::ostream &out) {
    int t;
    in >> t;
    while(t--){
      f(in, out);
    }
  }
};
 
 
int main() {
	BCatCycle solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
