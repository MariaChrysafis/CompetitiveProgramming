/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Maria Chrysafis
 */



#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <iomanip>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <string>
#include <random>
using namespace std;
class BColoringRectangles {
public:
    int solver (int u, int v) {
        if (u == 1 && v == 1) {
            return 0;
        }
        if ((u == 1 && v == 2) || (u == 2 && v == 1)) {
            return 1;
        }
        if ((u == 2) && (v == 2)) {
            return 2;
        }
        if (u % 3 == 0 || v % 3 == 0) {
            return (u * v)/3;
        }
        if (u % 3 == 1 && v % 3 == 1) {
            return (u * v + 1)/3;
        }
        if (u % 3 == 2 && v % 3 == 2) {
            return (u * v + 2)/3;
        }
        return (u * v + 1)/3;
    }
	void solve(std::istream& in, std::ostream& out) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        int t;
        in >> t;
        while (t--) {
            int u, v;
            in >> u >> v;
            out << solver(u, v) << '\n';
        }
	}
};


int main() {
	BColoringRectangles solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
