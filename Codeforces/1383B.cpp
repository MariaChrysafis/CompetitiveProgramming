    /**
     * code generated by JHelper
     * More info: https://github.com/AlexeyDmitriev/JHelper
     * @author
     */
     
    #include <iostream>
    #include <fstream>
     
    #include <iostream>
    #include <vector>
    #include <set>
    using namespace std;
    class BGameGame {
    public:
        string f(std::istream& in, std::ostream& out) {
          int n;
          in >> n;
          int arr[n];
          int XOR = 0;
          for(int i = 0; i < n; i++){
            in >> arr[i];
            XOR = XOR ^ arr[i];
          }
          if(XOR == 0){
            return "DRAW";
          }
          int mostSignificantBit = -1;
          for(int i = 31; i >= 0; i--){
            bool bit = (1 << i) & XOR;
            if(bit){
              mostSignificantBit = i;
              break;
            }
          }
          int oc = 0;
          int zc = 0;
          for(int i = 0; i < n; i++){
            int x = arr[i];
            bool bit = (1 << mostSignificantBit) & x;
            if(bit){
              oc++;
            }else{
              zc++;
            }
          }
          if(oc == 0){
            return "DRAW";
          }
          if(oc % 4 == 3 && zc % 2 == 0){
            return "LOSE";
          }
          return "WIN";
        }
    	void solve(std::istream& in, std::ostream& out) {
    	  int t;
    	  in >> t;
    	  while(t--){
    	    string s = f(in, out);
    	    out << s << endl;
    	  }
    	}
    };
     
     
    int main() {
    	BGameGame solver;
    	std::istream& in(std::cin);
    	std::ostream& out(std::cout);
    	solver.solve(in, out);
    	return 0;
    }
