/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
#include <set>
#include <map>
using namespace std;
class DDistinctCharactersQueries {
public:
	void solve(std::istream& in, std::ostream& out) {
	  string s;
	  in >> s;
	  int q;
	  in >> q;
	  map<char,set<int>> myMap;
	  for(int i = 0; i < s.length(); i++){
	    myMap[s[i]].insert(i);
	  }
	  while(q--){
	    //solve the query
	    int dum;
	    in >> dum;
	    if(dum == 1){
	      //update
	      int ind;
	      char c;
	      in >> ind >> c;
	      ind--;
	      myMap[s[ind]].erase(ind);
          s[ind] = c;
          myMap[c].insert(ind);
	    }else{
	      //process some query
	      int L,R;
	      in >> L >> R;
	      L--;
	      R--;
	      int counter = 0;
	      for(char c = 'a'; c <= 'z'; c++){
	        if(myMap[c].empty()) continue;
	        if(myMap[c].count(L) || myMap[c].count(R)){
	          counter++;
	          continue;
	        }
	        auto l = myMap[c].lower_bound(L);
	        if(l == myMap[c].end()){
	          continue;
	        }
	        if(*l < R){
	          counter++;
	        }
	      }
	      out << counter << endl;
	    }
	  }
	}
};


int main() {
	DDistinctCharactersQueries solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
