/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>
#include <cmath>
/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>
#include <cmath>

#include <vector>
#include <map>
#include <unordered_map>
#include <set>
#include <algorithm>
using namespace std;
class FCopyOrPrefixSum {
public:
  const int MOD = 1000000007;
  int f(std::istream &in, std::ostream &out){
    int n;
    in >> n;
    int b[n];
    for(int i = 0; i < n; i++){
      in >> b[i];
    }
    unordered_map<long long,long long> m;
    m[0] = 1;
    long long pref = 0;
    long long y = 1;
    for(int i = 0; i < n; i++){
      long long x = m[pref];
      m[pref] = y;
      pref -= b[i];
      y = ((y << 1) - x + MOD) % MOD;
    }
    return y;
  }
  void solve(std::istream &in, std::ostream &out) {
    int t;
    in >> t;
    while(t--){
      int ans = f(in, out);
      out << ans << '\n';
    }
  }
};

int main() {
  ios_base::sync_with_stdio(false);
        cin.tie(NULL);
	FCopyOrPrefixSum solver;
        std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
