/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Maria Chrysafis (Olympia)
 */



#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <iomanip>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <string>
#include <random>
using namespace std;
class AFunkyNumbers {
public:
	void solve(std::istream& in, std::ostream& out) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        set<long long> triangular_numers;
        for (long long i = 1; i <= (long long)1e5; i++) {
            triangular_numers.insert(i * (i + 1)/2);
        }
        long long n;
        in >> n;
        for (long long i: triangular_numers) {
            if (triangular_numers.count(n - i)) {
                out << "YES\n";
                return;
            }
        }
        out << "NO\n";
	}
};


int main() {
	AFunkyNumbers solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
