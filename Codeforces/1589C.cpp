/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author Maria Chrysafis
 */



#include <iostream>
#include <fstream>
#include <vector>
#include <map>
#include <set>
#include <iomanip>
#include <algorithm>
#include <unordered_map>
#include <unordered_set>
#include <queue>
#include <string>
#include <random>
using namespace std;
class CTwoArrays {
public:
    bool solver (vector<int> v1, vector<int> v2) {
        sort(v1.begin(), v1.end());
        sort(v2.begin(), v2.end());
        for (int i = 0; i < v1.size(); i++) {
            if (v1[i] - v2[i] != 0 && v1[i] - v2[i] != -1) {
                return false;
            }
        }
        return true;
    }
    void solve(std::istream& in, std::ostream& out) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
        int t;
        in >> t;
        while (t--) {
            vector<int> v1, v2;
            int n;
            in >> n;
            v1.resize(n), v2.resize(n);
            for (int j = 0; j < n; j++) {
                in >> v1[j];
            }
            for (int j = 0; j < n; j++) {
                in >> v2[j];
            }
            bool b = solver(v1, v2);
            if (b) out << "YES\n";
            else out << "NO\n";
        }
    }
};


int main() {
	CTwoArrays solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
