
Copy

    /**
     * code generated by JHelper
     * More info: https://github.com/AlexeyDmitriev/JHelper
     * @author
     */
     
    #include <iostream>
    #include <fstream>
     
    #include <iostream>
    #include <vector>
    #include <algorithm>
    using namespace std;
    class AWizardOfOrz {
    public:
      vector<char> v = {'0', '1', '2', '3', '4', '5', '6', '7', '8', '9'};
      int n;
      string repl(int ind, int strt){
        string s;
        s.resize(n);
        int cur = strt;
        for(int i = ind; i >= 0; i--){
          s[i] = v[cur];
          cur++;
          if(cur == 10){
            cur = 0;
          }
        }
        cur = (strt + 1) % 10;
        for(int i = ind + 1; i < n; i++){
          s[i] = v[cur];
          cur++;
          if(cur == 10){
            cur = 0;
          }
        }
        return s;
      }
      void f(std::istream& in, std::ostream& out) {
        in >> n;
        string str;
        str.resize(n);
        for(int i = 0; i < n; i++){
          str[i] = '0';
        }
        for(int j = 0; j < 10; j++){
          str = max(str, repl(1, j));
          str = max(str, repl(0, j));
          str = max(str, repl(n - 2, j));
          str = max(str, repl(n - 1, j));
        }
        out << str << endl;
      }
      void solve(std::istream& in, std::ostream& out) {
        ios_base::sync_with_stdio(false);
        cin.tie(NULL);
     
        int t;
        in >> t;
        while(t--){
          f(in, out);
        }
      }
    };
     
     
     
    int main() {
    	AWizardOfOrz solver;
    	std::istream& in(std::cin);
    	std::ostream& out(std::cout);
    	solver.solve(in, out);
    	return 0;
    }
