    /**
     * code generated by JHelper
     * More info: https://github.com/AlexeyDmitriev/JHelper
     * @author
     */
     
    #include <iostream>
    #include <fstream>
     
    #include <iostream>
    using namespace std;
    class ESuperheroBattle {
    public:
        void f(std::istream& in, std::ostream& out) {
          long long H;
          in >> H;
          int n;
          in >> n;
          int arr[n];
          long long sum = 0;
          long long minDelta = 0;
          for(int i = 0; i < n; i++){
            in >> arr[i];
            sum += arr[i];
            if(sum < minDelta){
              minDelta = sum;
            }
          }
          long long sm = H;
          for(int i = 0; i < n; i++){
            sm += arr[i];
            if(sm <= 0){
              out << i + 1 << endl;
              return;
            }
          }
          if(sum >= 0){
            out << -1 << endl;
            return;
          }
          ///As soon as our sum reaches -minDelta, we know that we'll eventually reach 0
          long long rnds = -(H + minDelta)/sum;
          long long cur = H + rnds * sum;
          long long ans = rnds * n;
          for(int i = 0; i < n; i++){
            cur += arr[i];
            if(cur <= 0){
              ans += i;
              out << ans + 1 << endl;
              return;
            }
          }
          ans += n;
          for(int i = 0; i < n; i++){
            cur += arr[i];
            if(cur <= 0){
              ans += i;
              out << ans + 1 << endl;
              return;
            }
          }
        }
    	void solve(std::istream& in, std::ostream& out) {
    	  f(in, out);
    	}
    };
     
    //sum = -202
    //H = 1000
    //minDelta = -600
     
    int main() {
    	ESuperheroBattle solver;
    	std::istream& in(std::cin);
    	std::ostream& out(std::cout);
    	solver.solve(in, out);
    	return 0;
    }
