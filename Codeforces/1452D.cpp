/**
 * code generated by JHelper
 * More info: https://github.com/AlexeyDmitriev/JHelper
 * @author
 */

#include <iostream>
#include <fstream>

#include <iostream>
const long long MOD = 998244353;
using namespace std;
class DRadioTowers {
public:
    long long binpow(long long a, long long b) {
      long long res = 1;
      while (b > 0) {
        if (b & 1){
          res = res * a;
          res %= MOD;
        }
        a = a * a;
        a %= MOD;
        b >>= 1;
      }
      return res;
    }
	void solve(std::istream& in, std::ostream& out) {
	  int n;
	  in >> n;
	  long long prev = 0;
	  long long cur = 1;
	  for(int i = 0; i < n - 1; i++){
	    cur = prev + cur;
	    prev = cur - prev;
	    cur %= MOD;
	    prev %= MOD;
	  }
	  out << (binpow(binpow(2,n), MOD - 2) * cur) % MOD << endl;
	}
};

int main() {
	DRadioTowers solver;
	std::istream& in(std::cin);
	std::ostream& out(std::cout);
	solver.solve(in, out);
	return 0;
}
